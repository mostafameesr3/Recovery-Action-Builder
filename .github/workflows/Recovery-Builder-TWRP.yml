name: Recovery Builder - TWRP

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'TeamWin Manifest Branch'
        required: true
        default: 'twrp-12.1'
        type: choice
        options:
          - twrp-12.1
          - twrp-11
      DEVICE_TREE:
        description: 'Custom Recovery Tree URL'
        required: true
        default: 'https://github.com/mostafameesr3/twrp-device_xiaomi_sweet.git'
      DEVICE_TREE_BRANCH:
        description: 'Device Tree Branch'
        required: true
        default: 'twrp-12.1'
        type: choice
        options:
        - twrp-12.1
        - twrp-12.1-ext4
      DEVICE_PATH:
        description: 'Device Path (e.g., device/xiaomi/sweet)'
        required: true
        default: 'device/xiaomi/sweet'
      DEVICE_NAME:
        description: 'Device Codename'
        required: true
        default: 'sweet'
      BUILD_TARGET:
        description: 'Build Target'
        required: true
        default: 'recovery'
        type: choice
        options:
          - boot
          - recovery
          - vendorboot
      BUILD_TYPE:
        description: 'Build Type'
        required: true
        default: 'eng'
        type: choice
        options:
          - eng
          - userdebug
          - user
      LDCHECK:
        description: 'Blob to Check (for LDCheck)'
        required: true
        default: 'system/bin/qseecomd'

jobs:
  build:
    name: Build TWRP by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.sender.id == github.event.repository.owner.id
    env:
      GITHUB_TOKEN: ${{ secrets.RECOVERY }}
    permissions:
      contents: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Display Inputs
        run: |
          echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
          echo "Device: ${{ github.event.inputs.DEVICE_NAME }}"
          echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}"
          echo "Build Type: ${{ github.event.inputs.BUILD_TYPE }}"
          echo "Device Tree: ${{ github.event.inputs.DEVICE_TREE }}"
          echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
          echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
          echo "LDCHECK: ${{ github.event.inputs.LDCHECK }}"

      - name: Cleanup System
        uses: rokibhasansagar/slimhub_actions@main

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 24

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt -y install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick protobuf-compiler python3-protobuf lib32readline-dev lib32z1-dev libdw-dev libelf-dev lz4 libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev

      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'

      - name: Install Git Repo Tool
        run: |
          mkdir ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo

      - name: Determine Manifest URL
        uses: haya14busa/action-cond@v1
        id: manifest
        with:
          cond: ${{ github.event.inputs.MANIFEST_BRANCH == 'twrp-11' || github.event.inputs.MANIFEST_BRANCH == 'twrp-12.1' }}
          if_true: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git
          if_false: https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git

      - name: Initialize Repo
        run: |
          mkdir android-recovery && cd android-recovery
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          repo init --depth=1 -u ${{ steps.manifest.outputs.value }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}

      - name: Repo Sync
        run: |
          cd android-recovery
          repo sync -c -j$(nproc --all) --current-branch --force-sync --no-tags --no-clone-bundle --optimized-fetch --prune

      - name: Clone Device Tree
        run: |
          cd android-recovery
          TREE_URL="${{ github.event.inputs.DEVICE_TREE }}"
          TOKEN="${{ secrets.RECOVERY }}"
          if [ -n "$TOKEN" ]; then
            AUTHED_URL=$(echo $TREE_URL | sed -e "s#https://#https://${TOKEN}@#")
            git clone "$AUTHED_URL" -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
          else
            git clone "$TREE_URL" -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
          fi
          cd ${{ github.event.inputs.DEVICE_PATH }}
          echo "COMMIT_ID=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Find Makefile
        run: |
          cd android-recovery
          if [ -f ${{ github.event.inputs.DEVICE_PATH }}/twrp_${{ github.event.inputs.DEVICE_NAME }}.mk ]; then
            echo "DEVICE_MAKEFILE=twrp_${{ github.event.inputs.DEVICE_NAME }}" >> $GITHUB_ENV
          elif [ -f ${{ github.event.inputs.DEVICE_PATH }}/omni_${{ github.event.inputs.DEVICE_NAME }}.mk ]; then
            echo "DEVICE_MAKEFILE=omni_${{ github.event.inputs.DEVICE_NAME }}" >> $GITHUB_ENV
          else
            echo "No valid makefile found. Exiting."
            exit 1
          fi

      - name: Build Recovery Image
        run: |
          cd android-recovery
          source build/envsetup.sh
          export ALLOW_MISSING_DEPENDENCIES=true
          lunch ${{ env.DEVICE_MAKEFILE }}-${{ github.event.inputs.BUILD_TYPE }}
          make clean
          make ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)

      - name: Set Build Date
        run: echo "BUILD_DATE=$(date +%Y%m%d-%H%M)" >> $GITHUB_ENV

      - name: Upload Raw Image to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          files: |
            android-recovery/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.BUILD_TARGET }}.img
          name: Unofficial TeamWin Recovery for ${{ github.event.inputs.DEVICE_NAME }} - ${{ env.BUILD_DATE }}
          tag_name: ${{ github.run_id }}
          body: |
            Built via **GitHub Actions**
            
            **Build:** ${{ inputs.MANIFEST_BRANCH }}
            **Device:** ${{ inputs.DEVICE_NAME }}
            **Maintainer:** @${{ github.actor }}
            **Status:** Booted and tested   

      - name: Cleanup after build
        run: |
          echo "Cleaning up..."
          rm -rf android-recovery/.repo
          rm -rf ~/.ccache
          rm -rf android-recovery/out
          sudo apt clean
          echo "Cleanup complete."
